shallow_clone: true
clone_depth: 1

branches:
  only:
    - master

image:
  - Visual Studio 2019
  - Ubuntu2004 # 20.04 LTS (Focal Fossa)
  - macos-bigsur

for:
  - # Windows
    matrix:
      only:
      - image: Visual Studio 2019

    environment:
      # Set Qt toolkit path
      QTOOLS: C:\Qt\Tools\mingw1120_64\bin
      QTDIR: C:\Qt\6.4\mingw_64 # required as is

    before_build:
      - set PATH=%QTOOLS%;%QTDIR%\bin;%PATH%

      - cmd /c ver
      - gcc --version
      - qmake --version
      - cmake --version
      - python --version

    build_script:
      # Build Leviathan version file
      - python appveyor_generateversion.py

      - cd src
      - mkdir deploy64

      #- mingw32-make clean
      #- del Makefile*
      #- del .qmake.stash

      - qmake Leviathan.pro CONFIG+=release
      - mingw32-make -j%NUMBER_OF_PROCESSORS%

    after_build:
      - copy /Y release\Leviathan.exe deploy64

      # Prepare the libraries and the other files to deploy  
      - call %QTDIR%\bin\windeployqt.exe --force --compiler-runtime --no-translations --no-opengl-sw --no-system-d3d-compiler --no-quick-import --no-virtualkeyboard deploy64
      # windeployqt only copies the required Qt dlls, not the c++ ones, even if i added --compiler-runtime
      - copy /Y "%QTOOLS%\libstdc++-6.dll" deploy64
      - copy /Y "%QTOOLS%\libgcc_s_seh-1.dll" deploy64
      - copy /Y "%QTOOLS%\libwinpthread-1.dll" deploy64
      - copy /Y "%QTOOLS%\libgomp*.dll" deploy64		# we need the OpenMP libraries

      # Copy extra required libs
      - copy /Y ..\winlibs\64\zlib.dll deploy64

      # Pack everything in a zip
      - 7z a ..\LeviathanWin64-automated-%APPVEYOR_REPO_TAG_NAME%.zip .\deploy64\*

    artifacts:
      - path: LeviathanWin64-automated-$(APPVEYOR_REPO_TAG_NAME).zip
        name: binpkg-x86_64

    deploy:
        tag: $(APPVEYOR_REPO_TAG_NAME)
        release: $(APPVEYOR_REPO_TAG_NAME)
        description: 'Release $(APPVEYOR_REPO_TAG_NAME)'
        provider: GitHub
        auth_token:
          secure: J8jjMGdO2zbAS725FDct4WZwi9jxYf2J1lCZC6zFStF4afJhL0QiQh08eGV3KT00
        artifact: binpkg-x86_64
        force_update: true
        draft: false
        prerelease: false
        on:
          #branch: master                 # release from master branch only. appveyor_repo_tag doesn't work with on: branch
          appveyor_repo_tag: true        # deploy on tag push only


  - # Linux build
    matrix:
      only:
      - image: Ubuntu2004

    install:
      - sudo add-apt-repository ppa:ubuntu-toolchain-r/test
      - sudo apt-get -y update
      - sudo apt-get -y install gcc-11 g++-11
      - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 --slave /usr/bin/g++ g++ /usr/bin/g++-11
      - sudo update-alternatives --set gcc /usr/bin/gcc-11 #--slave g++ /usr/bin/g++-11

    before_build:
      # Set Qt toolkit path
      - export QTDIR=${HOME}/Qt/6.2/gcc_64
      - export PATH=${QTDIR}/bin:$PATH

      - lsb_release -d
      - gcc --version
      - qmake --version
      - cmake --version
      - python --version

    build_script:
      # Build Leviathan version file
      - python appveyor_generateversion.py

      - cd src
      - qmake Leviathan.pro CONFIG+=release
      - make -j"$(nproc)"

    after_build:
      # Pack everything in a zip
      - tar -czf ../LeviathanLinux64-automated-${APPVEYOR_REPO_TAG_NAME}.zip Leviathan
    
    artifacts:
      - path: LeviathanLinux64-automated-$(APPVEYOR_REPO_TAG_NAME).zip
        name: binpkg-x86_64

    deploy:
      tag: $(APPVEYOR_REPO_TAG_NAME)
      release: $(APPVEYOR_REPO_TAG_NAME)
      description: 'Release $(APPVEYOR_REPO_TAG_NAME)'
      provider: GitHub
      auth_token:
        secure: J8jjMGdO2zbAS725FDct4WZwi9jxYf2J1lCZC6zFStF4afJhL0QiQh08eGV3KT00
      artifact: binpkg-x86_64
      force_update: true
      draft: false
      prerelease: false
      on:
        #branch: master                # release from master branch only. appveyor_repo_tag doesn't work with on: branch
        appveyor_repo_tag: true        # deploy on tag push only


  - # MacOS
    matrix:
      only:
      - image: macos-bigsur

    before_build:
      # Set Qt toolkit path
      - export QTDIR=${HOME}/Qt/6.2/macos
      - export PATH=${QTDIR}/bin:$PATH

      - sw_vers
      - gcc --version
      - qmake --version
      - cmake --version
      - python --version

    build_script:
      # Build Leviathan version file
      - python appveyor_generateversion.py

      - cd src
      - qmake Leviathan.pro CONFIG+=release
      - make -j"$(nproc)"

    after_build:
      # Pack everything in a zip
      #- zip -r ../LeviathanMacOSx86_64-automated-${APPVEYOR_REPO_TAG_NAME}.zip Leviathan.app
      - macdeployqt Leviathan.app -dmg
      - mv Leviathan.dmg ../LeviathanMacOSx86_64-automated-${APPVEYOR_REPO_TAG_NAME}.dmg
    
    artifacts:
      - path: LeviathanMacOSx86_64-automated-$(APPVEYOR_REPO_TAG_NAME).dmg
        name: binpkg-x86_64
      #- path: LeviathanMacOSx86_64-automated-$(APPVEYOR_REPO_TAG_NAME).zip
      #  name: binpkg-x86_64

    deploy:
      tag: $(APPVEYOR_REPO_TAG_NAME)
      release: $(APPVEYOR_REPO_TAG_NAME)
      description: 'Release $(APPVEYOR_REPO_TAG_NAME)'
      provider: GitHub
      auth_token:
        secure: J8jjMGdO2zbAS725FDct4WZwi9jxYf2J1lCZC6zFStF4afJhL0QiQh08eGV3KT00
      artifact: binpkg-x86_64
      force_update: true
      draft: false
      prerelease: false
      on:
        #branch: master                # release from master branch only. appveyor_repo_tag doesn't work with on: branch
        APPVEYOR_REPO_TAG: true        # deploy on tag push only
